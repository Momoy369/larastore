{"ast":null,"code":"// Import global API\nimport { reject } from 'core-js/fn/promise';\nimport Api from '../../api/Api';\nconst cart = {\n  //set namespace true\n  namespaced: true,\n  //state\n  state: {\n    // Cart\n    cart: [],\n    // Total Cart\n    cartTotal: 0,\n    // CartWeight\n    cartWeight: 0\n  },\n  //mutations\n  mutations: {\n    // Get data cart\n    GET_CART(state, product) {\n      state.cart = product;\n    },\n    // Get total cart\n    TOTAL_CART(state, total) {\n      state.cartTotal = total;\n    },\n    // Get cart weight\n    CART_WEIGHT(state, weight) {\n      state.cartWeight = weight;\n    },\n    // Clear all cart\n    CLEAR_CART(state) {\n      state.cart = [];\n      state.cartTotal = 0;\n      state.cartWeight = 0;\n    }\n  },\n  //actions\n  actions: {\n    // Action addToCart\n    addToCart({\n      commit\n    }, {\n      product_id,\n      price,\n      quantity,\n      weight\n    }) {\n      // Get data token user\n      const token = localStorage.getItem('token');\n      const user = JSON.parse(localStorage.getItem('user'));\n\n      // Set Axios header dengan type Authorization + Bearer Token\n      Api.defaults.headers.common['Authorization'] = \"Bearer \" + token;\n\n      // Send data Cart ke server\n      Api.post('/cart', {\n        product_id: product_id,\n        price: price,\n        quantity: quantity,\n        weight: weight,\n        customer_id: user.id\n      }).then(() => {\n        // Get data Cart\n        Api.get('/cart').then(response => {\n          // Commitmutation GET_CART\n          commit('GET_CART', response.data.cart);\n        });\n\n        // Get total Cart\n        Api.get('/cart/total').then(response => {\n          // Commit mutation TOTAL_CART\n          commit('TOTAL_CART', response.data.total);\n        });\n      });\n    },\n    // Cart Count\n    cartCount({\n      commit\n    }) {\n      // Get data token dan user\n      const token = localStorage.getItem('token');\n\n      // Set Axios header dengan type Authorization + Bearer token\n      Api.defaults.headers.common['Authorization'] = \"Bearer \" + token;\n\n      // Get data cart\n      Api.get('/cart').then(response => {\n        // Commit mutation GET_CART\n        commit('GET_CART', response.data.cart);\n      });\n    },\n    // Cart Total\n    cartTotal({\n      commit\n    }) {\n      // Get data token dan user\n      const token = localStorage.getItem('token');\n\n      // Set Axios header dengan type Authorization + Bearer token\n      Api.defaults.headers.common['Authorization'] = \"Bearer \" + token;\n\n      // Get data Cart\n      Api.get('cart/total').then(response => {\n        // Commit mutations GET_CART\n        commit('TOTAL_CART', response.data.total);\n      });\n    },\n    // Cart Weight\n    cartWeight({\n      commit\n    }) {\n      // Get data token dan user\n      const token = localStorage.getItem('token');\n\n      // Set Axios header dengan type Authorization + Bearer token\n      Api.defaults.headers.common['Authorization'] = \"Bearer \" + token;\n      Api.get('/cart/totalWeight').then(response => {\n        // Commit mutation CART_WEIGHT\n        commit('CART_WEIGHT', response.data.total);\n      });\n    },\n    // Action removeCart\n    removeCart({\n      commit\n    }, cart_id) {\n      // Get data token dan user\n      const token = localStorage.getItem('token');\n\n      // Set Axios header dengan Authorization + Bearer token\n      Api.defaults.headers.common['Authorization'] = \"Bearer \" + token;\n      Api.post('/cart/remove', {\n        cart_id: cart_id\n      }).then(() => {\n        // Get Cart\n        Api.get('/cart').then(response => {\n          commit('GET_CART', response.data.cart);\n        });\n\n        // Get total cart\n        Api.get('/cart/total').then(response => {\n          commit('TOTAL_CART', response.data.total);\n        });\n\n        // Get total cart weight\n        Api.get('/cart/totalWeight').then(response => {\n          commit('CART_WEIGHT', response.data.total);\n        });\n      });\n    },\n    // Checkout\n    checkout({\n      commit\n    }, data) {\n      return new Promise((resolve, reject) => {\n        Api.post('/checkout', {\n          courier: data.courier_type,\n          service: data.courier_service,\n          cost: data.courier_cost,\n          weight: data.weight,\n          name: data.name,\n          phone: data.phone,\n          province: data.province_id,\n          city: data.city_id,\n          address: data.address,\n          grand_total: data.grandTotal\n        }).then(response => {\n          resolve(response.data);\n\n          // Remove all Cart on Database\n          Api.post('/cart/removeAll').then(() => {\n            // Clear cart\n            commit('CLEAR_CART');\n          }).catch(error => {\n            console.log(error);\n          });\n        });\n      }).catch(error => {\n        reject(error);\n      });\n    }\n  },\n  //getters\n  getters: {\n    // Get cart\n    getCart(state) {\n      return state.cart;\n    },\n    // Count Cart\n    cartCount(state) {\n      return state.cart.length;\n    },\n    // Cart Total\n    cartTotal(state) {\n      return state.cartTotal;\n    }\n  }\n};\nexport default cart;","map":{"version":3,"names":["reject","Api","cart","namespaced","state","cartTotal","cartWeight","mutations","GET_CART","product","TOTAL_CART","total","CART_WEIGHT","weight","CLEAR_CART","actions","addToCart","commit","product_id","price","quantity","token","localStorage","getItem","user","JSON","parse","defaults","headers","common","post","customer_id","id","then","get","response","data","cartCount","removeCart","cart_id","checkout","Promise","resolve","courier","courier_type","service","courier_service","cost","courier_cost","name","phone","province","province_id","city","city_id","address","grand_total","grandTotal","catch","error","console","log","getters","getCart","length"],"sources":["D:/xampp/htdocs/larastore/frontend-larastore/src/store/module/cart.js"],"sourcesContent":["// Import global API\r\nimport { reject } from 'core-js/fn/promise'\r\nimport Api from '../../api/Api'\r\n\r\nconst cart = {\r\n    \r\n    //set namespace true\r\n    namespaced: true,\r\n    \r\n    //state\r\n    state: {\r\n\r\n        // Cart\r\n        cart: [],\r\n\r\n        // Total Cart\r\n        cartTotal: 0,\r\n\r\n        // CartWeight\r\n        cartWeight: 0,\r\n    \r\n    },\r\n    \r\n    //mutations\r\n    mutations: {\r\n\r\n        // Get data cart\r\n        GET_CART(state, product) {\r\n            state.cart = product\r\n        },\r\n\r\n        // Get total cart\r\n        TOTAL_CART(state, total) {\r\n            state.cartTotal = total\r\n        },\r\n\r\n        // Get cart weight\r\n        CART_WEIGHT(state, weight) {\r\n            state.cartWeight = weight\r\n        },\r\n\r\n        // Clear all cart\r\n        CLEAR_CART(state) {\r\n            state.cart = []\r\n            state.cartTotal = 0\r\n            state.cartWeight = 0\r\n        }\r\n    \r\n    },\r\n    \r\n    //actions\r\n    actions: {\r\n\r\n        // Action addToCart\r\n        addToCart({ commit }, { product_id, price, quantity, weight }) {\r\n\r\n            // Get data token user\r\n            const token = localStorage.getItem('token')\r\n            const user = JSON.parse(localStorage.getItem('user'))\r\n\r\n            // Set Axios header dengan type Authorization + Bearer Token\r\n            Api.defaults.headers.common['Authorization'] = \"Bearer \" + token\r\n\r\n            // Send data Cart ke server\r\n            Api.post('/cart', {\r\n                product_id: product_id,\r\n                price: price,\r\n                quantity: quantity,\r\n                weight: weight,\r\n                customer_id: user.id\r\n            })\r\n            .then(() => {\r\n\r\n                // Get data Cart\r\n                Api.get('/cart')\r\n                .then(response => {\r\n\r\n                    // Commitmutation GET_CART\r\n                    commit('GET_CART', response.data.cart)\r\n                })\r\n\r\n                // Get total Cart\r\n                Api.get('/cart/total')\r\n                .then(response => {\r\n\r\n                    // Commit mutation TOTAL_CART\r\n                    commit('TOTAL_CART', response.data.total)\r\n                })\r\n            })\r\n        },\r\n\r\n        // Cart Count\r\n        cartCount({ commit }) {\r\n\r\n            // Get data token dan user\r\n            const token = localStorage.getItem('token')\r\n\r\n            // Set Axios header dengan type Authorization + Bearer token\r\n            Api.defaults.headers.common['Authorization'] = \"Bearer \" + token\r\n\r\n            // Get data cart\r\n            Api.get('/cart')\r\n            .then(response => {\r\n\r\n                // Commit mutation GET_CART\r\n                commit('GET_CART', response.data.cart)\r\n            })\r\n        },\r\n\r\n        // Cart Total\r\n        cartTotal({ commit }) {\r\n\r\n            // Get data token dan user\r\n            const token = localStorage.getItem('token')\r\n\r\n            // Set Axios header dengan type Authorization + Bearer token\r\n            Api.defaults.headers.common['Authorization'] = \"Bearer \" + token\r\n\r\n            // Get data Cart\r\n            Api.get('cart/total')\r\n            .then(response => {\r\n\r\n                // Commit mutations GET_CART\r\n                commit('TOTAL_CART', response.data.total)\r\n            })\r\n        },\r\n\r\n        // Cart Weight\r\n        cartWeight({ commit }) {\r\n\r\n            // Get data token dan user\r\n            const token = localStorage.getItem('token')\r\n\r\n            // Set Axios header dengan type Authorization + Bearer token\r\n            Api.defaults.headers.common['Authorization'] = \"Bearer \" + token\r\n\r\n            Api.get('/cart/totalWeight')\r\n            .then(response => {\r\n\r\n                // Commit mutation CART_WEIGHT\r\n                commit('CART_WEIGHT', response.data.total)\r\n            })\r\n        },\r\n\r\n        // Action removeCart\r\n        removeCart({ commit }, cart_id) {\r\n\r\n            // Get data token dan user\r\n            const token = localStorage.getItem('token')\r\n\r\n            // Set Axios header dengan Authorization + Bearer token\r\n            Api.defaults.headers.common['Authorization'] = \"Bearer \" + token\r\n\r\n            Api.post('/cart/remove', {\r\n                cart_id: cart_id\r\n            })\r\n            .then(() => {\r\n\r\n                // Get Cart\r\n                Api.get('/cart')\r\n                .then(response => {\r\n                    commit('GET_CART', response.data.cart)\r\n                })\r\n\r\n                // Get total cart\r\n                Api.get('/cart/total')\r\n                .then(response => {\r\n                    commit('TOTAL_CART', response.data.total)\r\n                })\r\n\r\n                // Get total cart weight\r\n                Api.get('/cart/totalWeight')\r\n                .then(response => {\r\n                    commit('CART_WEIGHT', response.data.total)\r\n                })\r\n            })\r\n        },\r\n\r\n        // Checkout\r\n        checkout({ commit }, data) {\r\n\r\n            return new Promise((resolve, reject) => {\r\n\r\n                Api.post('/checkout', {\r\n                    courier:        data.courier_type,\r\n                    service:        data.courier_service,\r\n                    cost:           data.courier_cost,\r\n                    weight:         data.weight,\r\n                    name:           data.name,\r\n                    phone:          data.phone,\r\n                    province:       data.province_id,\r\n                    city: data.city_id,\r\n                    address: data.address,\r\n                    grand_total: data.grandTotal\r\n                }).then(response => {\r\n\r\n                    resolve(response.data)\r\n\r\n                    // Remove all Cart on Database\r\n                    Api.post('/cart/removeAll').then(() => {\r\n\r\n                        // Clear cart\r\n                        commit('CLEAR_CART')\r\n                    }).catch(error => {\r\n                        console.log(error)\r\n                    })\r\n                })\r\n            }).catch(error => {\r\n                reject(error)\r\n            })\r\n        }\r\n    \r\n    },\r\n    \r\n    //getters\r\n    getters: {\r\n\r\n        // Get cart\r\n        getCart(state) {\r\n            return state.cart\r\n        },\r\n\r\n        // Count Cart\r\n        cartCount(state) {\r\n            return state.cart.length\r\n        },\r\n\r\n        // Cart Total\r\n        cartTotal(state) {\r\n            return state.cartTotal\r\n        }\r\n    \r\n    }\r\n   \r\n}\r\n\r\nexport default cart"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}