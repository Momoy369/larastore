{"ast":null,"code":"// Import View Router\nimport { createRouter, createWebHistory } from 'vue-router';\n\n// Import store vuex\nimport store from '@/store';\n\n// Define a routes\nconst routes = [{\n  path: '/register',\n  name: 'register',\n  component: () => import('@/views/auth/Register.vue')\n}, {\n  path: '/login',\n  name: 'login',\n  component: () => import('@/views/auth/Login.vue')\n}, {\n  path: '/customer/dashboard',\n  name: 'dashboard',\n  component: () => import('@/views/dashboard/Index.vue'),\n  // Check if logged in user\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/customer/order',\n  name: 'order',\n  component: () => import('../views/order/Index.vue'),\n  meta: {\n    // Check isLoggedIn\n    requiresAuth: true\n  }\n}, {\n  path: '/customer/order/'\n}];\n\n// Create router\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Define route for handle authentication\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.reuiresAuth)) {\n    // Cek nilai dari getters isLoggedIn di module Auth\n    if (store.getters['auth/isLoggedIn']) {\n      next();\n      return;\n    }\n    next('/login');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","store","routes","path","name","component","meta","requiresAuth","router","history","beforeEach","to","from","next","matched","some","record","reuiresAuth","getters"],"sources":["D:/xampp/htdocs/larastore/frontend-larastore/src/router/index.js"],"sourcesContent":["// Import View Router\r\nimport { createRouter, createWebHistory } from 'vue-router'\r\n\r\n// Import store vuex\r\nimport store from '@/store'\r\n\r\n// Define a routes\r\nconst routes = [\r\n    {\r\n        path: '/register',\r\n        name: 'register',\r\n        component: () => import('@/views/auth/Register.vue')\r\n    },\r\n    {\r\n        path: '/login',\r\n        name: 'login',\r\n        component: () => import('@/views/auth/Login.vue')\r\n    },\r\n    {\r\n        path: '/customer/dashboard',\r\n        name: 'dashboard',\r\n        component: () => import('@/views/dashboard/Index.vue'),\r\n        // Check if logged in user\r\n        meta: {\r\n            requiresAuth: true\r\n        }\r\n    },\r\n\r\n    {\r\n        path: '/customer/order',\r\n        name: 'order',\r\n        component: () => import('../views/order/Index.vue'),\r\n        meta: {\r\n\r\n            // Check isLoggedIn\r\n            requiresAuth: true\r\n        }\r\n    },\r\n\r\n    {\r\n        path: '/customer/order/'\r\n    }\r\n]\r\n\r\n// Create router\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes\r\n})\r\n\r\n// Define route for handle authentication\r\nrouter.beforeEach((to, from, next) => {\r\n    if(to.matched.some(record => record.meta.reuiresAuth)) {\r\n        // Cek nilai dari getters isLoggedIn di module Auth\r\n        if(store.getters['auth/isLoggedIn']) {\r\n            next()\r\n            return\r\n        }\r\n        next('/login')\r\n    } else {\r\n        next()\r\n    }\r\n})\r\n\r\nexport default router"],"mappings":"AAAA;AACA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;;AAE3D;AACA,OAAOC,KAAK,MAAM,SAAS;;AAE3B;AACA,MAAMC,MAAM,GAAG,CACX;EACIC,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAE,MAAM,MAAM,CAAC,2BAA2B;AACvD,CAAC,EACD;EACIF,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAE,MAAM,MAAM,CAAC,wBAAwB;AACpD,CAAC,EACD;EACIF,IAAI,EAAE,qBAAqB;EAC3BC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAE,MAAM,MAAM,CAAC,6BAA6B,CAAC;EACtD;EACAC,IAAI,EAAE;IACFC,YAAY,EAAE;EAClB;AACJ,CAAC,EAED;EACIJ,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAE,MAAM,MAAM,CAAC,0BAA0B,CAAC;EACnDC,IAAI,EAAE;IAEF;IACAC,YAAY,EAAE;EAClB;AACJ,CAAC,EAED;EACIJ,IAAI,EAAE;AACV,CAAC,CACJ;;AAED;AACA,MAAMK,MAAM,GAAGT,YAAY,CAAC;EACxBU,OAAO,EAAET,gBAAgB,EAAE;EAC3BE;AACJ,CAAC,CAAC;;AAEF;AACAM,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC,IAAGF,EAAE,CAACG,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACV,IAAI,CAACW,WAAW,CAAC,EAAE;IACnD;IACA,IAAGhB,KAAK,CAACiB,OAAO,CAAC,iBAAiB,CAAC,EAAE;MACjCL,IAAI,EAAE;MACN;IACJ;IACAA,IAAI,CAAC,QAAQ,CAAC;EAClB,CAAC,MAAM;IACHA,IAAI,EAAE;EACV;AACJ,CAAC,CAAC;AAEF,eAAeL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}