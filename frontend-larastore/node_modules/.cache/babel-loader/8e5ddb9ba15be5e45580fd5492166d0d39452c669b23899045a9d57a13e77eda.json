{"ast":null,"code":"// Import global API\nimport Api from '../../api/Api';\nconst category = {\n  // Set namespace\n  namespaced: true,\n  // State\n  state: {\n    // Index categories\n    categories: [],\n    // Product in category\n    productInCategory: []\n  },\n  // Mutations\n  mutations: {\n    // Set state categories dengan data dari response\n    GET_CATEGORIES(state, categories) {\n      state.categories = categories;\n    },\n    // Set state productInCategory dengan data dari response\n    PRODUCT_IN_CATEGORY(state, products) {\n      state.productInCategory = products;\n    }\n  },\n  // Actions\n  actions: {\n    // Action getCategories\n    getCategories({\n      commit\n    }) {\n      // Get data categories ke server\n      Api.get('/categories').then(response => {\n        // Commit ke mutation GET_CATEGORIES dengan response data\n        commit('GET_CATEGORIES', response.data.categories);\n      }).catch(error => {\n        // Show error log dari response\n        console.log(error);\n      });\n    },\n    // Action get data product berdasarkan category\n    getProductInCategory({\n      commit\n    }, slug) {\n      // Get data product by category ke server\n      Api.get(`/category/${slug}`).then(response => {\n        // Commit ke mutations PRODUCT_IN_CATEGORY dengan response data\n        commit('PRODUCT_IN_CATEGORY', response.data.product);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  },\n  // Getters\n  getters: {}\n};\nexport default category;","map":{"version":3,"names":["Api","category","namespaced","state","categories","productInCategory","mutations","GET_CATEGORIES","PRODUCT_IN_CATEGORY","products","actions","getCategories","commit","get","then","response","data","catch","error","console","log","getProductInCategory","slug","product","getters"],"sources":["D:/xampp/htdocs/larastore/frontend-larastore/src/store/module/category.js"],"sourcesContent":["// Import global API\r\nimport Api from '../../api/Api'\r\n\r\nconst category = {\r\n\r\n    // Set namespace\r\n    namespaced: true,\r\n\r\n    // State\r\n    state: {\r\n\r\n        // Index categories\r\n        categories: [],\r\n\r\n        // Product in category\r\n        productInCategory: [],\r\n\r\n    },\r\n\r\n    // Mutations\r\n    mutations: {\r\n\r\n        // Set state categories dengan data dari response\r\n        GET_CATEGORIES(state, categories) {\r\n            state.categories = categories\r\n        },\r\n\r\n        // Set state productInCategory dengan data dari response\r\n        PRODUCT_IN_CATEGORY(state, products) {\r\n            state.productInCategory = products\r\n        }\r\n\r\n    },\r\n\r\n    // Actions\r\n    actions: {\r\n\r\n        // Action getCategories\r\n        getCategories({ commit }) {\r\n\r\n            // Get data categories ke server\r\n            Api.get('/categories')\r\n            .then(response => {\r\n\r\n                // Commit ke mutation GET_CATEGORIES dengan response data\r\n                commit('GET_CATEGORIES', response.data.categories)\r\n            })\r\n            .catch(error => {\r\n\r\n                // Show error log dari response\r\n                console.log(error)\r\n            })\r\n        },\r\n\r\n        // Action get data product berdasarkan category\r\n        getProductInCategory({ commit }, slug) {\r\n\r\n            // Get data product by category ke server\r\n            Api.get(`/category/${ slug }`)\r\n            .then(response => {\r\n\r\n                // Commit ke mutations PRODUCT_IN_CATEGORY dengan response data\r\n                commit('PRODUCT_IN_CATEGORY', response.data.product)\r\n            }).catch(error => {\r\n\r\n                console.log(error)\r\n            })\r\n        }\r\n\r\n    },\r\n\r\n    // Getters\r\n    getters: {\r\n\r\n    }\r\n}\r\n\r\nexport default category"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,eAAe;AAE/B,MAAMC,QAAQ,GAAG;EAEb;EACAC,UAAU,EAAE,IAAI;EAEhB;EACAC,KAAK,EAAE;IAEH;IACAC,UAAU,EAAE,EAAE;IAEd;IACAC,iBAAiB,EAAE;EAEvB,CAAC;EAED;EACAC,SAAS,EAAE;IAEP;IACAC,cAAc,CAACJ,KAAK,EAAEC,UAAU,EAAE;MAC9BD,KAAK,CAACC,UAAU,GAAGA,UAAU;IACjC,CAAC;IAED;IACAI,mBAAmB,CAACL,KAAK,EAAEM,QAAQ,EAAE;MACjCN,KAAK,CAACE,iBAAiB,GAAGI,QAAQ;IACtC;EAEJ,CAAC;EAED;EACAC,OAAO,EAAE;IAEL;IACAC,aAAa,CAAC;MAAEC;IAAO,CAAC,EAAE;MAEtB;MACAZ,GAAG,CAACa,GAAG,CAAC,aAAa,CAAC,CACrBC,IAAI,CAACC,QAAQ,IAAI;QAEd;QACAH,MAAM,CAAC,gBAAgB,EAAEG,QAAQ,CAACC,IAAI,CAACZ,UAAU,CAAC;MACtD,CAAC,CAAC,CACDa,KAAK,CAACC,KAAK,IAAI;QAEZ;QACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC;IAED;IACAG,oBAAoB,CAAC;MAAET;IAAO,CAAC,EAAEU,IAAI,EAAE;MAEnC;MACAtB,GAAG,CAACa,GAAG,CAAE,aAAaS,IAAM,EAAC,CAAC,CAC7BR,IAAI,CAACC,QAAQ,IAAI;QAEd;QACAH,MAAM,CAAC,qBAAqB,EAAEG,QAAQ,CAACC,IAAI,CAACO,OAAO,CAAC;MACxD,CAAC,CAAC,CAACN,KAAK,CAACC,KAAK,IAAI;QAEdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CAAC,CAAC;IACN;EAEJ,CAAC;EAED;EACAM,OAAO,EAAE,CAET;AACJ,CAAC;AAED,eAAevB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}