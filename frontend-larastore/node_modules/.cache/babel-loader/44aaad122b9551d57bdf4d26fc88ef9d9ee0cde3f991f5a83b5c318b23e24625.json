{"ast":null,"code":"// Import global API\nimport Api from '../../api/Api';\nconst cart = {\n  //set namespace true\n  namespaced: true,\n  //state\n  state: {\n    // Cart\n    cart: [],\n    // Total Cart\n    cartTotal: 0,\n    // CartWeight\n    cartWeight: 0\n  },\n  //mutations\n  mutations: {\n    // Get data cart\n    GET_CART(state, product) {\n      state.cart = product;\n    },\n    // Get total cart\n    TOTAL_CART(state, total) {\n      state.cartTotal = total;\n    },\n    // Get cart weight\n    CART_WEIGHT(state, weight) {\n      state.cartWeight = weight;\n    }\n  },\n  //actions\n  actions: {\n    // Action addToCart\n    addToCart({\n      commit\n    }, {\n      product_id,\n      price,\n      quantity,\n      weight\n    }) {\n      // Get data token user\n      const token = localStorage.getItem('token');\n      const user = JSON.parse(localStorage.getItem('user'));\n\n      // Set Axios header dengan type Authorization + Bearer Token\n      Api.defaults.headers.common['Authorization'] = \"Bearer \" + token;\n\n      // Send data Cart ke server\n      Api.post('/cart', {\n        product_id: product_id,\n        price: price,\n        quantity: quantity,\n        weight: weight,\n        customer_id: user.id\n      }).then(() => {\n        // Get data Cart\n        Api.get('/cart').then(response => {\n          // Commitmutation GET_CART\n          commit('GET_CART', response.data.cart);\n        });\n\n        // Get total Cart\n        Api.get('/cart/total').then(response => {\n          // Commit mutation TOTAL_CART\n          commit('TOTAL_CART', response.data.total);\n        });\n      });\n    },\n    // Cart Count\n    cartCount({\n      commit\n    }) {\n      // Get data token dan user\n      const token = localStorage.getItem('token');\n\n      // Set Axios header dengan type Authorization + Bearer token\n      Api.defaults.headers.common['Authorization'] = \"Bearer \" + token;\n\n      // Get data cart\n      Api.get('/cart').then(response => {\n        // Commit mutation GET_CART\n        commit('GET_CART', response.data.cart);\n      });\n    },\n    // Cart Total\n    cartTotal({\n      commit\n    }) {\n      // Get data token dan user\n      const token = localStorage.getItem('token');\n\n      // Set Axios header dengan type Authorization + Bearer token\n      Api.defaults.headers.common['Authorization'] = \"Bearer \" + token;\n\n      // Get data Cart\n      Api.get('cart/total').then(response => {\n        // Commit mutations GET_CART\n        commit('TOTAL_CART', response.data.total);\n      });\n    },\n    // Cart Weight\n    cartWeight({\n      commit\n    }) {\n      // Get data token dan user\n      const token = localStorage;\n    }\n  },\n  //getters\n  getters: {\n    // Get cart\n    getCart(state) {\n      return state.cart;\n    },\n    // Count Cart\n    cartCount(state) {\n      return state.cart.length;\n    },\n    // Cart Total\n    cartTotal(state) {\n      return state.cartTotal;\n    }\n  }\n};\nexport default cart;","map":{"version":3,"names":["Api","cart","namespaced","state","cartTotal","cartWeight","mutations","GET_CART","product","TOTAL_CART","total","CART_WEIGHT","weight","actions","addToCart","commit","product_id","price","quantity","token","localStorage","getItem","user","JSON","parse","defaults","headers","common","post","customer_id","id","then","get","response","data","cartCount","getters","getCart","length"],"sources":["D:/xampp/htdocs/larastore/frontend-larastore/src/store/module/cart.js"],"sourcesContent":["// Import global API\r\nimport Api from '../../api/Api'\r\n\r\nconst cart = {\r\n    \r\n    //set namespace true\r\n    namespaced: true,\r\n    \r\n    //state\r\n    state: {\r\n\r\n        // Cart\r\n        cart: [],\r\n\r\n        // Total Cart\r\n        cartTotal: 0,\r\n\r\n        // CartWeight\r\n        cartWeight: 0,\r\n    \r\n    },\r\n    \r\n    //mutations\r\n    mutations: {\r\n\r\n        // Get data cart\r\n        GET_CART(state, product) {\r\n            state.cart = product\r\n        },\r\n\r\n        // Get total cart\r\n        TOTAL_CART(state, total) {\r\n            state.cartTotal = total\r\n        },\r\n\r\n        // Get cart weight\r\n        CART_WEIGHT(state, weight) {\r\n            state.cartWeight = weight\r\n        },\r\n    \r\n    },\r\n    \r\n    //actions\r\n    actions: {\r\n\r\n        // Action addToCart\r\n        addToCart({ commit }, { product_id, price, quantity, weight }) {\r\n\r\n            // Get data token user\r\n            const token = localStorage.getItem('token')\r\n            const user = JSON.parse(localStorage.getItem('user'))\r\n\r\n            // Set Axios header dengan type Authorization + Bearer Token\r\n            Api.defaults.headers.common['Authorization'] = \"Bearer \" + token\r\n\r\n            // Send data Cart ke server\r\n            Api.post('/cart', {\r\n                product_id: product_id,\r\n                price: price,\r\n                quantity: quantity,\r\n                weight: weight,\r\n                customer_id: user.id\r\n            })\r\n            .then(() => {\r\n\r\n                // Get data Cart\r\n                Api.get('/cart')\r\n                .then(response => {\r\n\r\n                    // Commitmutation GET_CART\r\n                    commit('GET_CART', response.data.cart)\r\n                })\r\n\r\n                // Get total Cart\r\n                Api.get('/cart/total')\r\n                .then(response => {\r\n\r\n                    // Commit mutation TOTAL_CART\r\n                    commit('TOTAL_CART', response.data.total)\r\n                })\r\n            })\r\n        },\r\n\r\n        // Cart Count\r\n        cartCount({ commit }) {\r\n\r\n            // Get data token dan user\r\n            const token = localStorage.getItem('token')\r\n\r\n            // Set Axios header dengan type Authorization + Bearer token\r\n            Api.defaults.headers.common['Authorization'] = \"Bearer \" + token\r\n\r\n            // Get data cart\r\n            Api.get('/cart')\r\n            .then(response => {\r\n\r\n                // Commit mutation GET_CART\r\n                commit('GET_CART', response.data.cart)\r\n            })\r\n        },\r\n\r\n        // Cart Total\r\n        cartTotal({ commit }) {\r\n\r\n            // Get data token dan user\r\n            const token = localStorage.getItem('token')\r\n\r\n            // Set Axios header dengan type Authorization + Bearer token\r\n            Api.defaults.headers.common['Authorization'] = \"Bearer \" + token\r\n\r\n            // Get data Cart\r\n            Api.get('cart/total')\r\n            .then(response => {\r\n\r\n                // Commit mutations GET_CART\r\n                commit('TOTAL_CART', response.data.total)\r\n            })\r\n        },\r\n\r\n        // Cart Weight\r\n        cartWeight({ commit }) {\r\n\r\n            // Get data token dan user\r\n            const token = localStorage\r\n        }\r\n    \r\n    },\r\n    \r\n    //getters\r\n    getters: {\r\n\r\n        // Get cart\r\n        getCart(state) {\r\n            return state.cart\r\n        },\r\n\r\n        // Count Cart\r\n        cartCount(state) {\r\n            return state.cart.length\r\n        },\r\n\r\n        // Cart Total\r\n        cartTotal(state) {\r\n            return state.cartTotal\r\n        }\r\n    \r\n    }\r\n   \r\n}\r\n\r\nexport default cart"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}