{"ast":null,"code":"import { computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRoute } from 'vue-router';\nexport default {\n  name: 'CategoryShowComponent',\n  setup() {\n    // Store Vuex\n    const store = useStore();\n\n    // Vue route\n    const route = useRoute();\n\n    // onMounted akan menjalankan action \"getProductInCategory\" di module \"category\" Vuex\n    onMounted(() => {\n      store.dispatch('category/getProductInCategory', route.params.slug);\n    });\n\n    // Computed properti digunakan untuk mendapatkan data\n    // products dari state \"productInCategory\" di module \"category\"\n    const products = computed(() => {\n      return store.state.category.productInCategory;\n    });\n    return {\n      store,\n      route,\n      products\n    };\n  }\n};","map":{"version":3,"mappings":"AAmCI,SAASA,QAAQ,EAAEC,SAAQ,QAAS,KAAI;AACxC,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,QAAO,QAAS,YAAW;AAEpC,eAAe;EACXC,IAAI,EAAE,uBAAuB;EAE7BC,KAAK,GAAG;IAEJ;IACA,MAAMC,KAAI,GAAIJ,QAAQ,EAAC;;IAEvB;IACA,MAAMK,KAAI,GAAIJ,QAAQ,EAAC;;IAEvB;IACAF,SAAS,CAAC,MAAM;MACZK,KAAK,CAACE,QAAQ,CAAC,+BAA+B,EAAED,KAAK,CAACE,MAAM,CAACC,IAAI;IACrE,CAAC;;IAED;IACA;IACA,MAAMC,QAAO,GAAIX,QAAQ,CAAC,MAAM;MAC5B,OAAOM,KAAK,CAACM,KAAK,CAACC,QAAQ,CAACC,iBAAgB;IAChD,CAAC;IAED,OAAO;MACHR,KAAK;MACLC,KAAK;MACLI;IACJ;EACJ;AACJ","names":["computed","onMounted","useStore","useRoute","name","setup","store","route","dispatch","params","slug","products","state","category","productInCategory"],"sourceRoot":"","sources":["D:\\xampp\\htdocs\\larastore\\frontend-larastore\\src\\views\\category\\Show.vue"],"sourcesContent":["<template>\r\n    <div class=\"container-fluid mb-5 mt-4\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3 col-6 mb-3\" v-for=\"product in products\" :key=\"product.id\">\r\n                <div class=\"card h-100 border-0 shadow rounded-md\">\r\n                    <div class=\"card-img\">\r\n                        <img :src=\"product.image\" class=\"w-100 border\" style=\"height: 15em; object-fit: cover; border-top-left-radius: .25rem;border-top-right-radius: .25rem;\">\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <router-link :to=\"{ name: 'detail_product', params:{slug: product.slug} }\" class=\"card-title font-weight-bold\" style=\"font-size: 20px;\">\r\n                            {{ product.title }}\r\n                        </router-link>\r\n                        \r\n                        <div class=\"discount mt-2\" style=\"color: #999;\">\r\n                            <s>Rp. {{ moneyFormat(product.price) }}</s>\r\n                            <span class=\"badge badge-pill badge-danger text-white\">\r\n                                DISCOUNT {{ product.discount }} %\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div class=\"price font-weight-bold mt-3\" style=\"color: #47b04b; font-size: 20px;\">\r\n                            Rp. {{ moneyFormat(calculateDiscount(product)) }}\r\n                        </div>\r\n                        <router-link :to=\"{name: 'detail_product', params: { slug: product.slug }}\" class=\"btn btn-primary btn-md mt-3 btn-block shadow-md\">\r\n                            VIEW PRODUCT\r\n                        </router-link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import { computed, onMounted } from 'vue'\r\n    import { useStore } from 'vuex'\r\n    import { useRoute } from 'vue-router'\r\n\r\n    export default {\r\n        name: 'CategoryShowComponent',\r\n\r\n        setup() {\r\n\r\n            // Store Vuex\r\n            const store = useStore()\r\n\r\n            // Vue route\r\n            const route = useRoute()\r\n\r\n            // onMounted akan menjalankan action \"getProductInCategory\" di module \"category\" Vuex\r\n            onMounted(() => {\r\n                store.dispatch('category/getProductInCategory', route.params.slug)\r\n            })\r\n\r\n            // Computed properti digunakan untuk mendapatkan data\r\n            // products dari state \"productInCategory\" di module \"category\"\r\n            const products = computed(() => {\r\n                return store.state.category.productInCategory\r\n            })\r\n\r\n            return {\r\n                store,\r\n                route,\r\n                products\r\n            }\r\n        }\r\n    }\r\n\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}