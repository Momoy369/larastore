{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '@/router';\nimport { onMounted, computed, reactive } from 'vue';\nimport { useStore } from 'vuex';\nimport Api from '../../api/Api';\nexport default {\n  name: 'CartComponent',\n  setup() {\n    // Store vuex\n    const store = useStore();\n\n    // Mounted Cart\n    onMounted(() => {\n      // Menjalankan beberapa actions di module cart\n      store.dispatch('cart/cartCount'); // Untuk memanggil action \"cartCount\" di module \"Cart\"\n\n      store.dispatch('cart/cartTotal'); // Untuk memanggil action \"cartTotal\" di module \"Cart\"\n\n      store.dispatch('cart/cartWeight'); // Untuk memanggil action \"cartWeight\" di module \"Cart\"\n    });\n\n    // Get data cart dari getters cart di module cart\n    const carts = computed(() => {\n      return store.getters['cart/getCart'];\n    });\n\n    // Get total cart dari state cartTotal di module Cart\n    const cartTotal = computed(() => {\n      return store.state.cart.cartTotal;\n    });\n    const cartWeight = computed(() => {\n      return store.state.cart.cartWeight;\n    });\n\n    // Remove Cart\n\n    function removeCart(cart_id) {\n      // Panggil actions \"removeCart\" di module \"cart\" dengan parameter\n      \"cart_id\";\n\n      store.dispatch('cart/removeCart', cart_id);\n    }\n\n    // Ongkos kirim\n\n    // Define state form\n    const state = reactive({\n      name: '',\n      // State name\n      phone: '',\n      // State phone\n      address: '',\n      // State address\n      provinces: [],\n      // state provinsi\n      province_id: '',\n      // state ID provinsi\n      cities: [],\n      // state cities/kota\n      city_id: '',\n      // state ID city/kota\n      courier: false,\n      // state pilihan kurir\n      courier_type: '',\n      //state jenis kurir\n      cost: false,\n      // state cost kurir\n      costs: '',\n      // state costs kurir\n      costService: '',\n      // state get data cost dan service pengiriman\n      courier_cost: 0,\n      // state untuk menyimpan cost kurir\n      courier_service: '',\n      // state untuk menyimpan service kurir\n      buttonCheckout: false,\n      // state button checkout\n      grandTotal: 0 // state untuk grand Total\n    });\n\n    // Define state validation\n    const validation = reactive({\n      name: false,\n      // Validation name\n      phone: false,\n      // Validation phone\n      address: false // Validation alamat\n    });\n\n    // Mounted data provinsi\n    const provinces = onMounted(() => {\n      Api.get('/rajaongkir/provinces').then(response => {\n        state.provinces = response.data.data; // Assign state provinces dengan data hasil response\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n\n    // Fungsi mendapatkan data kota berdasarkan ID provinsi\n    function getCities() {\n      Api.get('/rajaongkir/cities', {\n        params: {\n          province_id: state.province_id // ID Provinsi\n        }\n      }).then(response => {\n        state.cities = response.data.data; // Assign state cities dengan data hasil response\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n    // Fungss menampilkan pilihan kurir\n    function getCourier() {\n      // Set state courier menjadi true untuk menampilkan pilihan kurir\n      state.courier = true;\n    }\n\n    // Fungsi untuk mendapatkan biaya ongkos kirim\n    function getOngkir() {\n      // Check berat produk\n      if (cartWeight.value == 0) {\n        alert('Please choose product first!');\n        return;\n      }\n      Api.post('/rajaongkir/checkOngkir', {\n        city_destination: state.city_id,\n        weight: cartWeight.value,\n        courier: state.courier_type\n      }).then(response => {\n        // Set state cost menjadi true untuk menampilkan pilihan cost pengiriman\n        state.cost = true;\n\n        // Assign state costs dengan hasil response\n        state.costs = response.data.data.costs;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n    // Fungsi untuk mengambil biaya ongkos kirim dan service kurir\n    function getCostService() {\n      // Split value dengan menghapus string -> |\n      let shipping = state.costService.split(\"|\");\n\n      // Set state cost dan service\n      state.courier_cost = shipping[0];\n      state.courier_service = shipping[1];\n\n      // Hitung Grand Total\n      const token = store.state.auth.token;\n      Api.defaults.headers.common['Authorization'] = \"Bearer \" + token;\n      Api.get('cart/total').then(response => {\n        // Jumlahkan total cart dan cost pengiriman\n        state.grandTotal = parseInt(response.data.total) + parseInt(state.courier_cost);\n      });\n\n      // Show button checkout\n      state.buttonCheckout = true;\n    }\n\n    // Method/Function Checkout\n    function checkout() {\n      // Cek apakah ada nama, phone, address, dan berat produk?\n      if (state.name && state.phone && state.address && cartWeight.value) {\n        // Define variable\n        let data = {\n          name: state.name,\n          phone: state.phone,\n          province_id: state.province_id,\n          city_id: state.city_id,\n          courier_type: state.courier_type,\n          courier_service: state.courier_service,\n          courier_cost: state.courier_cost,\n          weight: state.weight,\n          address: state.address,\n          grandTotal: state.grandTotal\n        };\n        store.dispatch('cart/checkout', data).then(response => {\n          // Jika berhasil, maka arahkan ke detail order dengan \n          // parameter snap_token Midtrans\n          router.push({\n            name: 'detail_order',\n            params: {\n              snap_token: response[0].snap_token\n            }\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n\n      // Cek validasi name\n      if (!state.name) {\n        validation.name = true;\n      }\n\n      // Cek validasi phone\n      if (!state.phone) {\n        validation.phone = true;\n      }\n\n      // Cek validasi address\n      if (!state.address) {\n        validation.address = true;\n      }\n    }\n    return {\n      carts,\n      cartTotal,\n      cartWeight,\n      removeCart,\n      state,\n      validation,\n      provinces,\n      getCities,\n      getCourier,\n      getOngkir,\n      getCostService,\n      checkout\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["router","onMounted","computed","reactive","useStore","Api","name","setup","store","dispatch","carts","getters","cartTotal","state","cart","cartWeight","removeCart","cart_id","phone","address","provinces","province_id","cities","city_id","courier","courier_type","cost","costs","costService","courier_cost","courier_service","buttonCheckout","grandTotal","validation","get","then","response","data","catch","error","console","log","getCities","params","getCourier","getOngkir","value","alert","post","city_destination","weight","getCostService","shipping","split","token","auth","defaults","headers","common","parseInt","total","checkout","push","snap_token"],"sourceRoot":"","sources":["D:\\xampp\\htdocs\\larastore\\frontend-larastore\\src\\views\\cart\\Index.vue"],"sourcesContent":["<template>\r\n    <div class=\"container-fluid mb-5 mt-4\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"card border-0 shadow rounded\">\r\n                    <div class=\"card-body\">\r\n                        <h5>\r\n                            <i class=\"fa fa-shopping-cart\"></i>\r\n                            ORDER DETAILS\r\n                        </h5>\r\n                        <hr>\r\n                        <table class=\"table\" style=\"border-style: solid !important; border-color: rgb(198, 206, 214) !important;\">\r\n                            <tbody>\r\n                                <tr v-for=\"cart in carts\" :key=\"cart.id\" style=\"background: #edf2f7;\">\r\n                                    <td class=\"b-none\" width=\"25%\">\r\n                                        <div class=\"wrapper-image-cart\">\r\n                                            <img :src=\"cart.product.image\" style=\"width: 100%; border-radius: .5rem;\">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td class=\"b-none\" width=\"50%\">\r\n                                        <h5>\r\n                                            <b>{{ cart.product.title }}</b>\r\n                                        </h5>\r\n                                        <table class=\"table-borderless\" style=\"font-size: 14px;\">\r\n                                            <tr>\r\n                                                <td style=\"padding: .20rem;\">QTY</td>\r\n                                                <td style=\"padding: .20rem;\">:</td>\r\n                                                <td style=\"padding: .20rem;\">{{ cart.quantity   }}</td>\r\n                                            </tr>\r\n                                        </table>\r\n                                    </td>\r\n                                    <td class=\"b-none text-right\">\r\n                                        <p class=\"m-0 font-weight-bold\">\r\n                                            Rp. {{ moneyFormat(cart.price)   }}\r\n                                        </p>\r\n\r\n                                        <p class=\"m-0\">\r\n                                            <s style=\"text-decoration-color: red\">\r\n                                                Rp. {{ moneyFormat(cart.product.price * cart.quantity)   }}\r\n                                            </s>\r\n                                        </p>\r\n                                        <br>\r\n                                        <div class=\"text-right\">\r\n                                            <button  @click.prevent=\"removeCart(cart.id)\" class=\"btn btn-sm btn-danger\">\r\n                                                <i class=\"fa fa-trash\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <table class=\"table table-default\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td class=\"set-td text-left\" width=\"60%\">\r\n                                        <p class=\"m-0\">TOTAL</p>\r\n                                    </td>\r\n                                    <td class=\"set-td text-right\" width=\"30%\">&nbsp; : Rp.</td>\r\n                                    <td class=\"text-right set-td\">\r\n                                        <p class=\"m-0\" id=\"subtotal\">\r\n                                            {{ moneyFormat(cartTotal)   }}\r\n                                        </p>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td class=\"set-td text-left border-0\">\r\n                                        <p class=\"m-0\">COST COURIER (<strong>{{ cartWeight }}</strong> gram<b></b>(s))</p>\r\n                                    </td>\r\n                                    <td class=\"set-td border-0 text-right\">&nbsp; : Rp.</td>\r\n                                    <td class=\"set-td border-0 text-right\">\r\n                                        <p class=\"m-0\" id=\"ongkir-cart\">0</p>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td class=\"text-left border-0\">\r\n                                        <p class=\"font-weight-bold m-0 h5 text-uppercase\">\r\n                                            Grand Total\r\n                                        </p>\r\n                                    </td>\r\n                                    <td class=\"border-0 text-right\">&nbsp; : Rp.</td>\r\n                                    <td class=\"border-0 text-right\">\r\n                                        <p class=\"font-weight-bold m-0\" align=\"right\">\r\n                                            0\r\n                                        </p>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"card border-0 shadow rounded\">\r\n                    <!-- Start Ongkos Kirim -->\r\n\r\n                    <div class=\"card-body\">\r\n                        <h5><i class=\"fa fa-user-circle\"></i> DELIVERY DETAILS</h5>\r\n                        <hr>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"font-weight-bold\">FULLNAME</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"nama_lengkap\" placeholder=\"Enter fullname\" v-model=\"state.name\">\r\n                                    <div class=\"mt-2 alert alert-danger\" v-if=\"validation.name\">\r\n                                        Enter your fullname\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"font-weight-bold\">PHONE/WHATSAPP</label>\r\n                                    <input type=\"number\" class=\"form-control\" id=\"phone\" placeholder=\"Enter your phone number\" v-model=\"state.phone\">\r\n                                    <div class=\"mt-2 alert alert-danger\" v-if=\"validation.phone\">\r\n                                        Enter your phone number\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"font-weight-bold\">PROVINCE</label>\r\n                                    <select class=\"form-control\" v-model=\"state.province_id\" @change=\"getCities\">\r\n                                        <option value=\"\">-- CHOOSE PROVINCE --</option>\r\n                                        <option v-for=\"province in state.provinces\" :key=\"province.id\" :value=\"province.province_id\">{{ province.name   }}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"font-weight-bold\">CITY/DISTRICT</label>\r\n                                    <select class=\"form-control\" v-model=\"state.city_id\" @change=\"getCourier\">\r\n                                        <option value=\"\">-- CHOOSE CITY --</option>\r\n                                        <option v-for=\"city in state.cities\" :key=\"city.id\" :value=\"city.city_id\">{{ city.name   }}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\" v-if=\"state.courier\">\r\n                                    <label class=\"font-weight-bold\">COURIER AGENT</label>\r\n                                    <br>\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input type=\"radio\" name=\"courier\" value=\"jne\" id=\"ongkos_kirim-jne\" class=\"form-check-input-select-courier\" v-model=\"state.courier_type\" @change=\"getOngkir\">\r\n                                        <label class=\"form-check-label font-weight-bold mr-4\" for=\"ongkos_kirim-jne\">JNE</label>\r\n\r\n                                        <input type=\"radio\" name=\"courier\" value=\"tiki\" id=\"ongkos_kirim-tiki\" class=\"form-check-input-select-courier\" v-model=\"state.courier_type\" @change=\"getOngkir\">\r\n                                        <label class=\"form-check-label font-weight-bold mr-4\" for=\"ongkos_kirim-tiki\">TIKI</label>\r\n\r\n                                        <input type=\"radio\" name=\"courier\" value=\"pos\" id=\"ongkos_kirim-pos\" class=\"form-check-input-select-courier\" v-model=\"state.courier_type\" @change=\"getOngkir\">\r\n                                        <label class=\"form-check-label font-weight-bold mr-4\" for=\"ongkos_kirim-pos\">POS</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\" v-if=\"state.cost\">\r\n                                    <hr>\r\n                                    <label class=\"font-weight-bold\">\r\n                                        COURIER SERVICE\r\n                                    </label>\r\n                                    <br>\r\n                                    <div class=\"form-check form-check-inline\" v-for=\"value in state.costs\" :key=\"value.service\">\r\n                                        <input type=\"radio\" class=\"form-check-input\" name=\"cost\" :id=\"value.service\" :value=\"value.cost[0].value+'|'+value.service\" v-model=\"state.costService\" @change=\"getCostService\">\r\n                                        <label :for=\"value.service\" class=\"form-check-label font-weight-normal mr-5\">\r\n                                            {{ value.service }} - Rp. {{ moneyFormat(value.cost[0].value) }}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"font-weight-bold\">\r\n                                        COMPLETE ADDRESS\r\n                                    </label>\r\n                                    <textarea name=\"address\" id=\"alamat\" rows=\"3\" class=\"form-control\" placeholder=\"Complete address with zip code\" v-model=\"state.address\"></textarea>\r\n                                    <div class=\"mt-2 alert alert-danger\" v-if=\"validation.address\">\r\n                                        Enter Complete Address\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12\" v-if=\"state.buttonCheckout\">\r\n                                <button @click.prevent=\"checkout\" class=\"btn btn-primary btn-lg btn-block\">\r\n                                    CHECKOUT\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <!-- End Ongkos kirim -->\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import router from '@/router'\r\nimport { onMounted, computed, reactive } from 'vue'\r\n    import { useStore } from 'vuex'\r\n    import Api from '../../api/Api'\r\n\r\n    export default {\r\n        name: 'CartComponent',\r\n\r\n        setup() {\r\n\r\n            // Store vuex\r\n            const store = useStore()\r\n\r\n            // Mounted Cart\r\n            onMounted(() => {\r\n\r\n                // Menjalankan beberapa actions di module cart\r\n                store.dispatch('cart/cartCount') // Untuk memanggil action \"cartCount\" di module \"Cart\"\r\n\r\n                store.dispatch('cart/cartTotal') // Untuk memanggil action \"cartTotal\" di module \"Cart\"\r\n\r\n                store.dispatch('cart/cartWeight') // Untuk memanggil action \"cartWeight\" di module \"Cart\"\r\n            })\r\n\r\n            // Get data cart dari getters cart di module cart\r\n            const carts = computed(() => {\r\n                return store.getters['cart/getCart']\r\n            })\r\n\r\n            // Get total cart dari state cartTotal di module Cart\r\n            const cartTotal = computed(() => {\r\n                return store.state.cart.cartTotal\r\n            })\r\n\r\n            const cartWeight = computed(() => {\r\n                return store.state.cart.cartWeight\r\n            })\r\n\r\n            // Remove Cart\r\n\r\n            function removeCart(cart_id) {\r\n            \r\n            // Panggil actions \"removeCart\" di module \"cart\" dengan parameter\r\n            \"cart_id\"\r\n            store.dispatch('cart/removeCart', cart_id)\r\n            }\r\n\r\n            // Ongkos kirim\r\n\r\n            // Define state form\r\n            const state = reactive({\r\n                name:           '', // State name\r\n                phone:          '', // State phone\r\n                address:        '', // State address\r\n                provinces:      [], // state provinsi\r\n                province_id:    '', // state ID provinsi\r\n                cities:         [], // state cities/kota\r\n                city_id:        '', // state ID city/kota\r\n                courier:        false, // state pilihan kurir\r\n                courier_type:   '', //state jenis kurir\r\n                cost:           false, // state cost kurir\r\n                costs:          '', // state costs kurir\r\n                costService:    '', // state get data cost dan service pengiriman\r\n                courier_cost:   0, // state untuk menyimpan cost kurir\r\n                courier_service: '', // state untuk menyimpan service kurir\r\n                buttonCheckout: false, // state button checkout\r\n                grandTotal:      0 // state untuk grand Total\r\n            })\r\n\r\n            // Define state validation\r\n            const validation = reactive({\r\n                name: false, // Validation name\r\n                phone: false, // Validation phone\r\n                address: false // Validation alamat\r\n            })\r\n\r\n            // Mounted data provinsi\r\n            const provinces = onMounted(() => {\r\n\r\n                Api.get('/rajaongkir/provinces')\r\n                .then(response => {\r\n\r\n                    state.provinces = response.data.data // Assign state provinces dengan data hasil response\r\n                }).catch(error => {\r\n                    console.log(error)\r\n                })\r\n            })\r\n\r\n            // Fungsi mendapatkan data kota berdasarkan ID provinsi\r\n            function getCities() {\r\n                Api.get('/rajaongkir/cities', {\r\n                    params: {\r\n                        province_id: state.province_id // ID Provinsi\r\n                    }\r\n                }).then(response => {\r\n\r\n                    state.cities = response.data.data // Assign state cities dengan data hasil response\r\n                }).catch(error => {\r\n                    console.log(error)\r\n                })\r\n            }\r\n\r\n            // Fungss menampilkan pilihan kurir\r\n            function getCourier() {\r\n\r\n                // Set state courier menjadi true untuk menampilkan pilihan kurir\r\n                state.courier = true\r\n            }\r\n\r\n            // Fungsi untuk mendapatkan biaya ongkos kirim\r\n            function getOngkir() {\r\n\r\n                // Check berat produk\r\n                if(cartWeight.value == 0) {\r\n                    alert('Please choose product first!')\r\n                    return\r\n                }\r\n\r\n                Api.post('/rajaongkir/checkOngkir', {\r\n                    city_destination: state.city_id,\r\n                    weight: cartWeight.value,\r\n                    courier: state.courier_type\r\n                }).then(response => {\r\n\r\n                    // Set state cost menjadi true untuk menampilkan pilihan cost pengiriman\r\n                    state.cost = true\r\n\r\n                    // Assign state costs dengan hasil response\r\n                    state.costs = response.data.data.costs\r\n                }).catch(error => {\r\n                    console.log(error)\r\n                })\r\n            }\r\n\r\n            // Fungsi untuk mengambil biaya ongkos kirim dan service kurir\r\n            function getCostService() {\r\n\r\n                // Split value dengan menghapus string -> |\r\n                let shipping = state.costService.split(\"|\")\r\n\r\n                // Set state cost dan service\r\n                state.courier_cost = shipping[0]\r\n                state.courier_service = shipping[1]\r\n\r\n                // Hitung Grand Total\r\n                const token = store.state.auth.token\r\n\r\n                Api.defaults.headers.common['Authorization'] = \"Bearer \" + token\r\n                Api.get('cart/total').then(response => {\r\n\r\n                    // Jumlahkan total cart dan cost pengiriman\r\n                    state.grandTotal = parseInt(response.data.total) + parseInt(state.courier_cost)\r\n                })\r\n\r\n                // Show button checkout\r\n                state.buttonCheckout = true\r\n            }\r\n\r\n            // Method/Function Checkout\r\n            function checkout() {\r\n\r\n                // Cek apakah ada nama, phone, address, dan berat produk?\r\n                if(state.name && state.phone && state.address && cartWeight.value)\r\n                {\r\n\r\n                    // Define variable\r\n                    let data = {\r\n                        name: state.name,\r\n                        phone: state.phone,\r\n                        province_id: state.province_id,\r\n                        city_id: state.city_id,\r\n                        courier_type: state.courier_type,\r\n                        courier_service: state.courier_service,\r\n                        courier_cost: state.courier_cost,\r\n                        weight: state.weight,\r\n                        address: state.address,\r\n                        grandTotal: state.grandTotal,\r\n                    }\r\n                    store.dispatch('cart/checkout', data).then(response => {\r\n\r\n                        // Jika berhasil, maka arahkan ke detail order dengan \r\n                        // parameter snap_token Midtrans\r\n                        router.push({\r\n                            name: 'detail_order',\r\n                            params: {\r\n                                snap_token: response[0].snap_token\r\n                            }\r\n                        })\r\n                    }).catch(error => {\r\n                        console.log(error)\r\n                    })\r\n                }\r\n\r\n                // Cek validasi name\r\n                if(!state.name) {\r\n                    validation.name = true\r\n                }\r\n\r\n                // Cek validasi phone\r\n                if(!state.phone) {\r\n                    validation.phone = true\r\n                }\r\n\r\n                // Cek validasi address\r\n                if(!state.address) {\r\n                    validation.address = true\r\n                }\r\n            }\r\n\r\n\r\n            return {\r\n                carts,\r\n                cartTotal,\r\n                cartWeight,\r\n                removeCart,\r\n                state,\r\n                validation,\r\n                provinces,\r\n                getCities,\r\n                getCourier,\r\n                getOngkir,\r\n                getCostService,\r\n                checkout,\r\n            }\r\n        }\r\n    }\r\n\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}