{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { onMounted, computed, reactive } from 'vue';\nimport { useStore } from 'vuex'; // <-- vuex\nimport Api from '../../api/Api'; // <-- global API endpoint\nimport { useRouter } from 'vue-router'; // vue router\n\nexport default {\n  name: 'CartComponent',\n  setup() {\n    //store vuex\n    const store = useStore();\n\n    //vue router\n    const router = useRouter();\n\n    //mounted cart\n    onMounted(() => {\n      //menjalankan beberapa actions di module cart\n      store.dispatch('cart/cartCount'); // <-- untuk memanggil action \"cartCount\" di module \"cart\"\n      store.dispatch('cart/cartTotal'); // <-- untuk memanggil action \"cartTotal\" di module \"cart\"\n      store.dispatch('cart/cartWeight'); // <-- untuk memanggil action \"cartWeight\" di module \"cart\"\n    });\n\n    //get data cart dari getters cart di module cart\n    const carts = computed(() => {\n      return store.getters['cart/getCart'];\n    });\n\n    //get total cart dari state cartTotal di module cart\n    const cartTotal = computed(() => {\n      return store.state.cart.cartTotal;\n    });\n\n    //get cart weight dari state cartWeight di module cart\n    const cartWeight = computed(() => {\n      return store.state.cart.cartWeight;\n    });\n\n    /**\r\n     * remove cart\r\n     */\n    function removeCart(cart_id) {\n      //panggil actions \"removeCart\" di module \"cart\" dengan parameter \"cart_id\"\n      store.dispatch('cart/removeCart', cart_id);\n    }\n\n    /**\r\n     * ongkos kirim\r\n    */\n\n    //define state form\n    const state = reactive({\n      name: '',\n      // <-- state name\n      phone: '',\n      // <-- state phone  \n      address: '',\n      // <-- state address  \n      provinces: [],\n      // <-- state provinces\n      province_id: '',\n      // <-- state ID province\n      cities: [],\n      // <-- state cities\n      city_id: '',\n      // <-- state ID City\n      courier: false,\n      // <-- state pilihan kurir\n      courier_type: '',\n      // <-- state jenis kurir \n      cost: false,\n      // <-- state cost kurir\n      costs: '',\n      // <-- state costs kurir\n      costService: '',\n      // <-- state get data cost dan service pengiriman\n      courier_cost: 0,\n      // <-- state untuk menyimpan cost kurir\n      courier_service: '',\n      // <- state untuk menyimpan service kurir        \n      buttonCheckout: false,\n      // <-- state button checkout \n      grandTotal: 0 // <-- state untuk grand total \n    });\n\n    //define state validation\n    const validation = reactive({\n      name: false,\n      // <-- validation name\n      phone: false,\n      // <-- validation phone\n      address: false // <-- validation address \n    });\n\n    //mounted data provinces\n    const provinces = onMounted(() => {\n      Api.get('/rajaongkir/provinces').then(response => {\n        state.provinces = response.data.data; // <-- assign state provinces dengan data hasil response\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n\n    //fungsi mendapatkan data kota berdasarkan ID provinsi\n    function getCities() {\n      Api.get('/rajaongkir/cities', {\n        params: {\n          province_id: state.province_id // ID provinsi\n        }\n      }).then(response => {\n        state.cities = response.data.data; // <-- assign state cities dengan data hasil response\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n    //fungsi menampilkan pilihan courier\n    function getCourier() {\n      // set state courier menjadi true, untuk menampilkan pilihan kurir\n      state.courier = true;\n    }\n\n    //fungsi untuk mendapatkan biaya ongkos kirim\n    function getOngkir() {\n      //check berat produk\n      if (cartWeight.value == 0) {\n        alert('silahkan pilih produk terlebih dahulu!');\n        return;\n      }\n      Api.post('/rajaongkir/checkOngkir', {\n        city_destination: state.city_id,\n        // <-- ID kota\n        weight: cartWeight.value,\n        // <-- berat produk\n        courier: state.courier_type // <-- jenis kurir\n      }).then(response => {\n        // set state cost menjadi true, untuk menampilkan pilihan cost pengiriman\n        state.cost = true;\n\n        //assign state costs dengan hasil response\n        state.costs = response.data.data.costs;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n    //fungsi untuk mengambil biaya ongkos kirim dan service kurir\n    function getCostService() {\n      //split value dengan menghapus string -> | \n      let shipping = state.costService.split(\"|\");\n\n      //set state cost dan service\n      state.courier_cost = shipping[0];\n      state.courier_service = shipping[1];\n\n      //hitung grandrotal\n      const token = store.state.auth.token;\n      Api.defaults.headers.common['Authorization'] = \"Bearer \" + token;\n      Api.get('cart/total').then(response => {\n        //jumlahkan total cart dan cost pengiriman\n        state.grandTotal = parseInt(response.data.total) + parseInt(state.courier_cost);\n      });\n\n      //show button checkout\n      state.buttonCheckout = true;\n    }\n\n    //method/function checkout\n    function checkout() {\n      //ceck apakah ada nama, phone, address dan berat produk ?\n      if (state.name && state.phone && state.address && cartWeight.value) {\n        //define variable\n        let data = {\n          name: state.name,\n          phone: state.phone,\n          province_id: state.province_id,\n          city_id: state.city_id,\n          courier_type: state.courier_type,\n          courier_service: state.courier_service,\n          courier_cost: state.courier_cost,\n          weight: cartWeight.value,\n          address: state.address,\n          grandTotal: state.grandTotal\n        };\n        store.dispatch('cart/checkout', data).then(response => {\n          //jika berhasil, arahakan ke detail order dengan parameter snap_token midtrans\n          router.push({\n            name: 'detail_order',\n            params: {\n              snap_token: response[0].snap_token\n            }\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n\n      //check validasi name\n      if (!state.name) {\n        validation.name = true;\n      }\n\n      //check validasi phone\n      if (!state.phone) {\n        validation.phone = true;\n      }\n\n      //check validasi address\n      if (!state.address) {\n        validation.address = true;\n      }\n    }\n    return {\n      carts,\n      // <-- state carts\n      cartTotal,\n      // <-- state cartTotal\n      cartWeight,\n      // <-- state cartWeight\n      removeCart,\n      // <-- method removeCart\n      state,\n      // <-- state form\n      validation,\n      // <-- state validation\n      provinces,\n      // <-- data provinces\n      getCities,\n      // <-- data city\n      getCourier,\n      // <-- get data courier\n      getOngkir,\n      // <-- get data ongkir\n      getCostService,\n      // <-- get cost dan service shipping\n      checkout // <-- function checkout \n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["onMounted","computed","reactive","useStore","Api","useRouter","name","setup","store","router","dispatch","carts","getters","cartTotal","state","cart","cartWeight","removeCart","cart_id","phone","address","provinces","province_id","cities","city_id","courier","courier_type","cost","costs","costService","courier_cost","courier_service","buttonCheckout","grandTotal","validation","get","then","response","data","catch","error","console","log","getCities","params","getCourier","getOngkir","value","alert","post","city_destination","weight","getCostService","shipping","split","token","auth","defaults","headers","common","parseInt","total","checkout","push","snap_token"],"sourceRoot":"","sources":["D:\\xampp\\htdocs\\larastore\\frontend-larastore\\src\\views\\cart\\Index.vue"],"sourcesContent":["<template>\r\n    <div class=\"container-fluid mb-5 mt-4\">\r\n          <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                  <div class=\"card border-0 shadow rounded\">\r\n                      <div class=\"card-body\">\r\n                          <h5><i class=\"fa fa-shopping-cart\"></i> DETAIL PESENAN</h5>\r\n                          <hr>\r\n                          <table class=\"table\"\r\n                              style=\"border-style: solid !important;border-color: rgb(198, 206, 214) !important;\">\r\n                              <tbody>\r\n                                  <tr v-for=\"cart in carts\" :key=\"cart.id\" style=\"background: #edf2f7;\">\r\n                                      <td class=\"b-none\" width=\"25%\">\r\n                                          <div class=\"wrapper-image-cart\">\r\n                                              <img :src=\"cart.product.image\" style=\"width: 100%;border-radius: .5rem\">\r\n                                          </div>\r\n                                      </td>\r\n                                      <td class=\"b-none\" width=\"50%\">\r\n                                          <h5><b>{{ cart.product.title }}</b></h5>\r\n                                          <table class=\"table-borderless\" style=\"font-size: 14px\">\r\n                                              <tr>\r\n                                                  <td style=\"padding: .20rem\">QTY</td>\r\n                                                  <td style=\"padding: .20rem\">:</td>\r\n                                                  <td style=\"padding: .20rem\"><b>{{ cart.quantity }}</b></td>\r\n                                              </tr>\r\n                                          </table>\r\n  \r\n                                      </td>\r\n                                      <td class=\"b-none text-right\">\r\n                                          <p class=\"m-0 font-weight-bold\">Rp. {{ moneyFormat(cart.price) }}\r\n                                          </p>\r\n  \r\n                                          <p class=\"m-0\">\r\n                                              <s style=\"text-decoration-color:red\">Rp.\r\n                                                  {{ moneyFormat(cart.product.price * cart.quantity) }}</s>\r\n                                          </p>\r\n  \r\n                                          <br>\r\n                                          <div class=\"text-right\">\r\n                                              <button @click.prevent=\"removeCart(cart.id)\" class=\"btn btn-sm btn-danger\">\r\n                                                  <i class=\"fa fa-trash\"></i>\r\n                                              </button>\r\n                                          </div>\r\n                                      </td>\r\n                                  </tr>\r\n                              </tbody>\r\n                          </table>\r\n  \r\n                          <table class=\"table table-default\">\r\n                              <tbody>\r\n                                  <tr>\r\n                                      <td class=\"set-td text-left\" width=\"60%\">\r\n                                          <p class=\"m-0\">JUMLAH </p>\r\n                                      </td>\r\n                                      <td class=\"set-td  text-right\" width=\"30%\">&nbsp; : Rp.</td>\r\n                                      <td class=\"text-right set-td \">\r\n                                          <p class=\"m-0\" id=\"subtotal\"> {{ moneyFormat(cartTotal) }}\r\n                                          </p>\r\n                                      </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                      <td class=\"set-td text-left border-0\">\r\n                                          <p class=\"m-0\">ONGKOS KIRIM (<strong>{{ cartWeight }}</strong> gram)</p>\r\n                                      </td>\r\n                                      <td class=\"set-td border-0 text-right\">&nbsp; : Rp.</td>\r\n                                      <td class=\"set-td border-0 text-right\">\r\n                                          <p class=\"m-0\" id=\"ongkir-cart\"> {{ moneyFormat(state.courier_cost) }}</p>\r\n                                      </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                      <td class=\" text-left border-0\">\r\n                                          <p class=\"font-weight-bold m-0 h5 text-uppercase\">Grand Total </p>\r\n                                      </td>\r\n                                      <td class=\" border-0 text-right\">&nbsp; : Rp.</td>\r\n                                      <td class=\" border-0 text-right\">\r\n                                          <p class=\"font-weight-bold m-0 h5\" align=\"right\">\r\n                                              {{ moneyFormat(state.grandTotal) }} </p>\r\n                                      </td>\r\n                                  </tr>\r\n                              </tbody>\r\n                          </table>\r\n  \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                  <div class=\"card border-0 shadow rounded\">\r\n                      \r\n                      <!-- start ongkos kirim -->\r\n  \r\n                      <div class=\"card-body\">\r\n                          <h5><i class=\"fa fa-user-circle\"></i> RINCIAN PENGIRIMAN</h5>\r\n                          <hr>\r\n                          \r\n                          <div class=\"row\">\r\n                              \r\n                              <div class=\"col-md-6\">\r\n                                  <div class=\"form-group\">\r\n                                      <label class=\"font-weight-bold\">NAMA LENGKAP</label>\r\n                                      <input type=\"text\" class=\"form-control\" id=\"nama_lengkap\" placeholder=\"Nama Lengkap\"\r\n                                          v-model=\"state.name\">\r\n                                      <div v-if=\"validation.name\" class=\"mt-2 alert alert-danger\">\r\n                                          Masukkan Nama Lengkap\r\n                                      </div>\r\n                                  </div>\r\n                              </div>\r\n                              \r\n                              <div class=\"col-md-6\">\r\n                                  <div class=\"form-group\">\r\n                                      <label class=\"font-weight-bold\">NO. HP / WHATSAPP</label>\r\n                                      <input type=\"number\" class=\"form-control\" id=\"phone\" placeholder=\"No. HP / WhatsApp\"\r\n                                          v-model=\"state.phone\">\r\n                                      <div v-if=\"validation.phone\" class=\"mt-2 alert alert-danger\">\r\n                                          Masukkan No. Telp\r\n                                      </div>\r\n                                  </div>\r\n                              </div>\r\n                              \r\n                              <div class=\"col-md-12\">\r\n                                  <div class=\"form-group\">\r\n                                      <label class=\"font-weight-bold\">PROVINSI</label>\r\n                                      <select class=\"form-control\" v-model=\"state.province_id\" @change=\"getCities\">\r\n                                          <option value=\"\">-- pilih provinsi --</option>\r\n                                          <option v-for=\"province in state.provinces\" :key=\"province.id\" :value=\"province.province_id\">\r\n                                              {{ province.name }}</option>\r\n                                      </select>\r\n                                  </div>\r\n                              </div>\r\n                              \r\n                              <div class=\"col-md-12\">\r\n                                  <div class=\"form-group\">\r\n                                      <label class=\"font-weight-bold\">KOTA / KABUPATEN</label>\r\n                                      <select class=\"form-control\" v-model=\"state.city_id\" @change=\"getCourier\">\r\n                                          <option value=\"\">-- pilih kota --</option>\r\n                                          <option v-for=\"city in state.cities\" :key=\"city.id\" :value=\"city.city_id\">{{ city.name }}\r\n                                          </option>\r\n                                      </select>\r\n                                  </div>\r\n                              </div>\r\n  \r\n                              <div class=\"col-md-12\">\r\n                                  <div class=\"form-group\" v-if=\"state.courier\">\r\n                                      <label class=\"font-weight-bold\">KURIR PENGIRIMAN</label>\r\n                                      <br>\r\n                                      <div class=\"form-check form-check-inline\">\r\n                                          <input class=\"form-check-input select-courier\" type=\"radio\" name=\"courier\"\r\n                                              id=\"ongkos_kirim-jne\" value=\"jne\" v-model=\"state.courier_type\" @change=\"getOngkir\">\r\n                                          <label class=\"form-check-label font-weight-bold mr-4\" for=\"ongkos_kirim-jne\">\r\n                                              JNE</label>\r\n                                          <input class=\"form-check-input select-courier\" type=\"radio\" name=\"courier\"\r\n                                              id=\"ongkos_kirim-tiki\" value=\"tiki\" v-model=\"state.courier_type\" @change=\"getOngkir\">\r\n                                          <label class=\"form-check-label font-weight-bold mr-4\"\r\n                                              for=\"ongkos_kirim-jnt\">TIKI</label>\r\n                                          <input class=\"form-check-input select-courier\" type=\"radio\" name=\"courier\"\r\n                                              id=\"ongkos_kirim-pos\" value=\"pos\" v-model=\"state.courier_type\" @change=\"getOngkir\">\r\n                                          <label class=\"form-check-label font-weight-bold\" for=\"ongkos_kirim-jnt\">POS</label>\r\n                                      </div>\r\n                                  </div>\r\n                              </div>\r\n  \r\n                              <div class=\"col-md-12\">\r\n                                  <div class=\"form-group\" v-if=\"state.cost\">\r\n                                      <hr>\r\n                                      <label class=\"font-weight-bold\">SERVICE KURIR</label>\r\n                                      <br>\r\n                                      <div v-for=\"value in state.costs\" :key=\"value.service\" class=\"form-check form-check-inline\">\r\n                                          <input class=\"form-check-input\" type=\"radio\" name=\"cost\" :id=\"value.service\"\r\n                                              :value=\"value.cost[0].value+'|'+value.service\" v-model=\"state.costService\"\r\n                                              @change=\"getCostService\">\r\n                                          <label class=\"form-check-label font-weight-normal mr-5\" :for=\"value.service\">\r\n                                              {{ value.service }} - Rp. {{ moneyFormat(value.cost[0].value) }}</label>\r\n                                      </div>\r\n                                  </div>\r\n                              </div>\r\n  \r\n                              <div class=\"col-md-12\">\r\n                                  <div class=\"form-group\">\r\n                                      <label class=\"font-weight-bold\">ALAMAT LENGKAP</label>\r\n                                      <textarea class=\"form-control\" id=\"alamat\" rows=\"3\"\r\n                                          placeholder=\"Alamat Lengkap&#10;&#10;Contoh: Perum. Griya Palem Indah, B-17 Jombang Jawa Timur 61419\"\r\n                                          v-model=\"state.address\"></textarea>\r\n                                      <div v-if=\"validation.address\" class=\"mt-2 alert alert-danger\">\r\n                                          Masukkan Alamat Lengkap\r\n                                      </div>\r\n                                  </div>\r\n                              </div>\r\n  \r\n                              <div v-if=\"state.buttonCheckout\" class=\"col-md-12\">\r\n                                  <button @click.prevent=\"checkout\" class=\"btn btn-primary btn-lg btn-block\">CHECKOUT</button>\r\n                              </div>\r\n  \r\n                          </div>\r\n  \r\n                      </div>\r\n  \r\n                      <!-- end ongkos kirim -->\r\n  \r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </template>\r\n  \r\n  <script>\r\n      import { onMounted, computed, reactive } from 'vue'\r\n      import { useStore } from 'vuex' // <-- vuex\r\n      import Api from '../../api/Api' // <-- global API endpoint\r\n      import { useRouter } from 'vue-router' // vue router\r\n  \r\n      export default {\r\n  \r\n          name: 'CartComponent',\r\n  \r\n          setup() {\r\n  \r\n              //store vuex\r\n              const store = useStore()\r\n  \r\n              //vue router\r\n              const router = useRouter()\r\n  \r\n              //mounted cart\r\n              onMounted(() => {\r\n              \r\n                  //menjalankan beberapa actions di module cart\r\n                      store.dispatch('cart/cartCount')  // <-- untuk memanggil action \"cartCount\" di module \"cart\"\r\n                      store.dispatch('cart/cartTotal')  // <-- untuk memanggil action \"cartTotal\" di module \"cart\"\r\n                      store.dispatch('cart/cartWeight') // <-- untuk memanggil action \"cartWeight\" di module \"cart\"\r\n              \r\n              })\r\n  \r\n              //get data cart dari getters cart di module cart\r\n              const carts = computed(() => {\r\n                  return store.getters['cart/getCart']\r\n              })\r\n  \r\n              //get total cart dari state cartTotal di module cart\r\n              const cartTotal = computed(() => {\r\n                  return store.state.cart.cartTotal\r\n              })\r\n  \r\n              //get cart weight dari state cartWeight di module cart\r\n              const cartWeight = computed(() => {\r\n                  return store.state.cart.cartWeight\r\n              })\r\n  \r\n              /**\r\n               * remove cart\r\n               */\r\n              function removeCart(cart_id) {\r\n                  //panggil actions \"removeCart\" di module \"cart\" dengan parameter \"cart_id\"\r\n                  store.dispatch('cart/removeCart', cart_id)\r\n              }\r\n  \r\n              /**\r\n               * ongkos kirim\r\n              */\r\n  \r\n              //define state form\r\n              const state = reactive({\r\n                  name:           '',     // <-- state name\r\n                  phone:          '',     // <-- state phone  \r\n                  address:        '',     // <-- state address  \r\n                  provinces:      [],     // <-- state provinces\r\n                  province_id:    '',     // <-- state ID province\r\n                  cities:         [],     // <-- state cities\r\n                  city_id:        '',     // <-- state ID City\r\n                  courier:        false,  // <-- state pilihan kurir\r\n                  courier_type:   '',     // <-- state jenis kurir \r\n                  cost:           false,  // <-- state cost kurir\r\n                  costs:          '',     // <-- state costs kurir\r\n                  costService:    '',     // <-- state get data cost dan service pengiriman\r\n                  courier_cost:   0,      // <-- state untuk menyimpan cost kurir\r\n                  courier_service:'',     // <- state untuk menyimpan service kurir        \r\n                  buttonCheckout: false,  // <-- state button checkout \r\n                  grandTotal:     0       // <-- state untuk grand total \r\n              })\r\n  \r\n              //define state validation\r\n              const validation = reactive({\r\n                  name:       false, // <-- validation name\r\n                  phone:      false, // <-- validation phone\r\n                  address:    false  // <-- validation address \r\n              })\r\n  \r\n              //mounted data provinces\r\n              const provinces = onMounted(() => {\r\n  \r\n              Api.get('/rajaongkir/provinces')\r\n  \r\n                  .then(response => {\r\n  \r\n                      state.provinces = response.data.data // <-- assign state provinces dengan data hasil response\r\n  \r\n                  }).catch(error => {\r\n                      console.log(error)\r\n                  }) \r\n  \r\n              })\r\n  \r\n              //fungsi mendapatkan data kota berdasarkan ID provinsi\r\n              function getCities() {\r\n                  \r\n                  Api.get('/rajaongkir/cities', {\r\n                      params: {\r\n                          province_id: state.province_id // ID provinsi\r\n                      }\r\n                  })\r\n                  .then(response => {\r\n  \r\n                      state.cities = response.data.data // <-- assign state cities dengan data hasil response\r\n  \r\n                  }).catch(error => {\r\n                      console.log(error)\r\n                  }) \r\n  \r\n              }\r\n  \r\n              //fungsi menampilkan pilihan courier\r\n              function getCourier() {\r\n                  // set state courier menjadi true, untuk menampilkan pilihan kurir\r\n                  state.courier = true \r\n              }\r\n  \r\n              //fungsi untuk mendapatkan biaya ongkos kirim\r\n              function getOngkir() {\r\n                  \r\n                  //check berat produk\r\n                  if (cartWeight.value == 0) {\r\n                      alert('silahkan pilih produk terlebih dahulu!')\r\n                      return\r\n                  }\r\n  \r\n                  Api.post('/rajaongkir/checkOngkir', {\r\n                      city_destination: state.city_id,    // <-- ID kota\r\n                      weight: cartWeight.value,           // <-- berat produk\r\n                      courier: state.courier_type         // <-- jenis kurir\r\n                  })\r\n                  .then(response => {\r\n  \r\n                      // set state cost menjadi true, untuk menampilkan pilihan cost pengiriman\r\n                      state.cost = true\r\n                      \r\n                      //assign state costs dengan hasil response\r\n                      state.costs = response.data.data.costs\r\n  \r\n                  }).catch(error => {\r\n                      console.log(error)\r\n                  })\r\n  \r\n              }\r\n  \r\n              //fungsi untuk mengambil biaya ongkos kirim dan service kurir\r\n              function getCostService() {\r\n                  \r\n                  //split value dengan menghapus string -> | \r\n                  let shipping = state.costService.split(\"|\")\r\n  \r\n                  //set state cost dan service\r\n                  state.courier_cost    = shipping[0]\r\n                  state.courier_service = shipping[1]\r\n  \r\n                  //hitung grandrotal\r\n                  const token = store.state.auth.token\r\n  \r\n                  Api.defaults.headers.common['Authorization'] = \"Bearer \" +token\r\n                  Api.get('cart/total')\r\n                  .then(response => {\r\n  \r\n                      //jumlahkan total cart dan cost pengiriman\r\n                      state.grandTotal = parseInt(response.data.total) + parseInt(state.courier_cost)\r\n  \r\n                  })\r\n  \r\n                  //show button checkout\r\n                  state.buttonCheckout = true\r\n              }\r\n  \r\n              //method/function checkout\r\n              function checkout() {\r\n  \r\n                  //ceck apakah ada nama, phone, address dan berat produk ?\r\n                  if (state.name && state.phone && state.address && cartWeight.value) {\r\n                      \r\n                      //define variable\r\n                      let data = {\r\n                          name:               state.name,\r\n                          phone:              state.phone,\r\n                          province_id:        state.province_id,\r\n                          city_id:            state.city_id,\r\n                          courier_type:       state.courier_type,\r\n                          courier_service:    state.courier_service,\r\n                          courier_cost:       state.courier_cost,\r\n                          weight:             cartWeight.value,\r\n                          address:            state.address,\r\n                          grandTotal:         state.grandTotal\r\n                      }\r\n                      store.dispatch('cart/checkout', data)\r\n                          .then(response => {\r\n  \r\n                              //jika berhasil, arahakan ke detail order dengan parameter snap_token midtrans\r\n                              router.push({\r\n                                  name: 'detail_order',\r\n                                  params: {\r\n                                      snap_token: response[0].snap_token\r\n                                  }\r\n                              })\r\n                          }).catch(error => {\r\n                              console.log(error)\r\n                          })\r\n  \r\n                  }\r\n  \r\n                  //check validasi name\r\n                  if (!state.name) {\r\n                      validation.name = true\r\n                  }\r\n  \r\n                      //check validasi phone\r\n                  if (!state.phone) {\r\n                      validation.phone = true\r\n                  }\r\n  \r\n                      //check validasi address\r\n                  if (!state.address) {\r\n                      validation.address = true\r\n                  }\r\n  \r\n              }\r\n  \r\n              return {\r\n                  carts,              // <-- state carts\r\n                  cartTotal,          // <-- state cartTotal\r\n                  cartWeight,         // <-- state cartWeight\r\n                  removeCart,         // <-- method removeCart\r\n                  state,              // <-- state form\r\n                  validation,         // <-- state validation\r\n                  provinces,          // <-- data provinces\r\n                  getCities,          // <-- data city\r\n                  getCourier,         // <-- get data courier\r\n                  getOngkir,          // <-- get data ongkir\r\n                  getCostService,     // <-- get cost dan service shipping\r\n                  checkout            // <-- function checkout \r\n              }\r\n  \r\n          }\r\n  \r\n      }\r\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}